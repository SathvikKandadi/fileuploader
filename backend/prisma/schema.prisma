// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}
model User {
  id             String           @id @default(uuid())
  email          String           @unique
  password       String
  name           String?
  createdAt      DateTime         @default(now())
  updatedAt      DateTime         @updatedAt
  files          File[]
  sharedWithMe   FileAccess[]    @relation("SharedWithUser")
  sharedByMe     FileAccess[]    @relation("SharedByUser")
}

model File {
  id             String           @id @default(uuid())
  name           String
  type           String
  size           Int
  key            String           @unique // S3 key
  encryptionIV   String           // Store IV for decryption
  ownerId        String
  owner          User             @relation(fields: [ownerId], references: [id])
  createdAt      DateTime         @default(now())
  updatedAt      DateTime         @updatedAt
  sharedWith     FileAccess[]
}

model FileAccess {
  id             String           @id @default(uuid())
  fileId         String
  file           File            @relation(fields: [fileId], references: [id])
  sharedWithId   String
  sharedWithUser User            @relation("SharedWithUser", fields: [sharedWithId], references: [id])
  sharedById     String
  sharedByUser   User            @relation("SharedByUser", fields: [sharedById], references: [id])
  accessType     AccessType
  createdAt      DateTime         @default(now())
  expiresAt      DateTime?

  @@unique([fileId, sharedWithId])
}

enum AccessType {
  READ
  WRITE
  ADMIN
}
